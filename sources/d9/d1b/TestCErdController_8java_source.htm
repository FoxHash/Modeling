<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Modeling: TestCErdController.java Quellcode</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../layout.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Modeling
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Erzeugt von Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Suchen');
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('../../',true,false,'search.php','Suchen');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d9/d1b/TestCErdController_8java_source.htm','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TestCErdController.java</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d9/d1b/TestCErdController_8java.htm">gehe zur Dokumentation dieser Datei</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @cond LICENSE</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * ######################################################################################</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * # LGPL License                                                                       #</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * # This file is part of the TU-Clausthal Mobile and Enterprise Computing Modeling     #</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * # Copyright (c) 2018-19                                                              #</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * # This program is free software: you can redistribute it and/or modify               #</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * # it under the terms of the GNU Lesser General Public License as                     #</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * # published by the Free Software Foundation, either version 3 of the                 #</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * # License, or (at your option) any later version.                                    #</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * # This program is distributed in the hope that it will be useful,                    #</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * # but WITHOUT ANY WARRANTY; without even the implied warranty of                     #</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      #</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * # GNU Lesser General Public License for more details.                                #</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * # You should have received a copy of the GNU Lesser General Public License           #</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * # along with this program. If not, see http://www.gnu.org/licenses/                  #</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * ######################################################################################</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * @endcond</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">package </span>de.tu_clausthal.in.mec.modeling.controller;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">import</span> edu.umd.cs.findbugs.annotations.NonNull;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> org.assertj.core.api.Assertions;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> org.junit.Before;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> org.junit.FixMethodOrder;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> org.junit.Test;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> org.junit.runner.RunWith;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">import</span> org.junit.runners.MethodSorters;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">import</span> org.springframework.http.HttpStatus;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">import</span> org.springframework.http.MediaType;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">import</span> org.springframework.mock.web.MockHttpServletResponse;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">import</span> org.springframework.test.web.servlet.MockMvc;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">import</span> org.springframework.test.web.servlet.request.MockMvcRequestBuilders;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">import</span> org.springframework.test.web.servlet.setup.MockMvcBuilders;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;@RunWith( SpringRunner.class )</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;@SpringBootTest</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;@FixMethodOrder( MethodSorters.NAME_ASCENDING )</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm">   50</a></span>&#160;public final class <a class="code" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm">TestCErdController</a></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#aadce3e346d2db26475ffedc2608f736b">   52</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TEST_MODEL_NAME = <span class="stringliteral">&quot;foo&quot;</span>;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a7fa361e2c41f3b2c9c1179ae7b899321">   53</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TEST_ENTITY = <span class="stringliteral">&quot;{ \&quot;id\&quot; : \&quot;Customer\&quot;, \&quot;weak_entity\&quot; : false, \&quot;attributes\&quot; : &quot;</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                              + <span class="stringliteral">&quot;[ { \&quot;name\&quot; : \&quot;Name\&quot;, \&quot;property\&quot; : \&quot;attribute\&quot; } ] }&quot;</span>;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#ac4a3f4bf5844ed460f9430bd3c64d5a3">   55</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TEST_RELATIONSHIP = <span class="stringliteral">&quot;{ \&quot;id\&quot; : \&quot;rel01\&quot;, \&quot;description\&quot; : \&quot;verfassen\&quot; }&quot;</span>;</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a96cec5d5e5be0c876df8c6514b42483f">   56</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TEST_ISARELATIONSHIP = <span class="stringliteral">&quot;{ \&quot;id\&quot;: \&quot;isa01\&quot; }&quot;</span>;</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a0cf3ef86db9d4ab4cc62e6653bf0e0b1">   57</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TEST_CONNECTION = <span class="stringliteral">&quot;{ \&quot;id\&quot; : \&quot;con01\&quot;, \&quot;relationship\&quot; : \&quot;rel01\&quot;, \&quot;entity\&quot; : \&quot;Customer\&quot;, \&quot;cardinality\&quot; : \&quot;1:1\&quot; }&quot;</span>;</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#ab7afe2f0df9d80a9ddf09d40b3ac8220">   58</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TEST_ISACONNECTION_PARENT = <span class="stringliteral">&quot;{ \&quot;id\&quot;: \&quot;isacon01\&quot;, \&quot;connection_type\&quot;: \&quot;parent\&quot;, \&quot;isarelationship\&quot;: \&quot;isa01\&quot;, &quot;</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                                                            + <span class="stringliteral">&quot;\&quot;entity\&quot;: \&quot;Customer\&quot; }&quot;</span>;</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#ac7bf9043596e7c64250eb50f21f2a69f">   60</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TEST_ISACONNECTION_CHILD = <span class="stringliteral">&quot;{ \&quot;id\&quot;: \&quot;isacon02\&quot;, \&quot;connection_type\&quot;: \&quot;child\&quot;, \&quot;isarelationship\&quot;: \&quot;isa01\&quot;, &quot;</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                                           + <span class="stringliteral">&quot;\&quot;entity\&quot;: \&quot;Customer\&quot; }&quot;</span>;</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#ac4f91f5f57ae44af3c35e99ba881acc0">   62</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TEST_COMPLETE_JSON_MODEL = <span class="stringliteral">&quot;{ \&quot;model_id\&quot;: \&quot;testmodel\&quot;, \&quot;entities\&quot;: [ { \&quot;id\&quot;: \&quot;Customer\&quot;, \&quot;weak_entity\&quot;: false, &quot;</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                                           + <span class="stringliteral">&quot;\&quot;attributes\&quot;: [ { \&quot;name\&quot;: \&quot;Name\&quot;, \&quot;property\&quot;: \&quot;key attribute\&quot; }, { \&quot;name\&quot;: &quot;</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                                           + <span class="stringliteral">&quot;\&quot;Customer-No\&quot;, \&quot;property\&quot;: \&quot;attribute\&quot; } ] }, { \&quot;id\&quot;: \&quot;Product\&quot;, \&quot;weak_entity\&quot;: &quot;</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                                           + <span class="stringliteral">&quot;false, \&quot;attributes\&quot;: [ { \&quot;name\&quot;: \&quot;Date\&quot;, \&quot;property\&quot;: \&quot;derived value attribute\&quot; }, &quot;</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                                                           + <span class="stringliteral">&quot;{ \&quot;name\&quot;: \&quot;Product-No\&quot;, \&quot;property\&quot;: \&quot;key attribute\&quot; } ] } ], \&quot;relationships\&quot;: &quot;</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                                           + <span class="stringliteral">&quot;[ { \&quot;id\&quot;: \&quot;rel01\&quot;, \&quot;description\&quot;: \&quot;purchase\&quot; } ], \&quot;connections\&quot;: [ { \&quot;id\&quot;: \&quot;con01\&quot;, &quot;</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                                                           + <span class="stringliteral">&quot;\&quot;relationship\&quot;: \&quot;rel01\&quot;, \&quot;entity\&quot;: \&quot;Customer\&quot;, \&quot;cardinality\&quot;: \&quot;1:1\&quot; }, { \&quot;id\&quot;: &quot;</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                                           + <span class="stringliteral">&quot;\&quot;con02\&quot;, \&quot;relationship\&quot;: \&quot;rel01\&quot;, \&quot;entity\&quot;: \&quot;Product\&quot;, \&quot;cardinality\&quot;: \&quot;1:n\&quot; } ], &quot;</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                                           + <span class="stringliteral">&quot;\&quot;isa-relationships\&quot;: [], \&quot;isa-connections\&quot;: [] }&quot;</span>;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a1cd9bd2e2d2cdfb353f3d888fec969a7">   72</a></span>&#160;    <span class="keyword">private</span> MockMvc <a class="code" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a1cd9bd2e2d2cdfb353f3d888fec969a7">m_mockmvc</a>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    @Autowired</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a9a3b8fdb7c5df405391077bcee793058">   75</a></span>&#160;    <span class="keyword">private</span> <a class="code" href="../../dd/d3a/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1CErdController.htm">CErdController</a> <a class="code" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a9a3b8fdb7c5df405391077bcee793058">m_erdcontroller</a>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    @Before</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a1adc7c9e57f04c4f799a1c27c63d4713">   78</a></span>&#160;    <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a1adc7c9e57f04c4f799a1c27c63d4713">setup</a>()</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        m_mockmvc = MockMvcBuilders.standaloneSetup( m_erdcontroller ).build();</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    @Test</div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a035c1acbf78cc15db76cb9226fb5c395">   89</a></span>&#160;    <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a035c1acbf78cc15db76cb9226fb5c395">initialControllerTest</a>() throws Exception</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    {</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        Assertions.assertThat( m_erdcontroller ).isNotNull();</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    @Test</div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#ad3c4364aac29a2d188d96e7e4f7a2646">  100</a></span>&#160;    <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#ad3c4364aac29a2d188d96e7e4f7a2646">createNewModelStepByStep</a>() throws Exception</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keyword">final</span> MockHttpServletResponse l_response = m_mockmvc.perform(</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            MockMvcRequestBuilders.get( <span class="stringliteral">&quot;/erd/create/{model}&quot;</span>, TEST_MODEL_NAME ).accept( MediaType.APPLICATION_JSON ) )</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                                                            .andReturn()</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                                                            .getResponse();</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        Assertions.assertThat( l_response.getStatus() ).isEqualTo( HttpStatus.OK.value() );</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        Assertions.assertThat( preparePostRequest( <span class="stringliteral">&quot;/erd/create/{model}/entity&quot;</span>, TEST_MODEL_NAME, TEST_ENTITY ).getStatus() ).isEqualTo(</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            HttpStatus.OK.value() );</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        Assertions.assertThat( preparePostRequest( <span class="stringliteral">&quot;/erd/create/{model}/relationship&quot;</span>, TEST_MODEL_NAME, TEST_RELATIONSHIP ).getStatus() ).isEqualTo(</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            HttpStatus.OK.value() );</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        Assertions.assertThat( preparePostRequest( <span class="stringliteral">&quot;/erd/create/{model}/isa-relationship&quot;</span>, TEST_MODEL_NAME, TEST_ISARELATIONSHIP ).getStatus() ).isEqualTo(</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            HttpStatus.OK.value() );</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        Assertions.assertThat( preparePostRequest( <span class="stringliteral">&quot;/erd/connect/relationship/{model}&quot;</span>, TEST_MODEL_NAME, TEST_CONNECTION ).getStatus() ).isEqualTo(</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            HttpStatus.OK.value() );</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        Assertions.assertThat( preparePostRequest( <span class="stringliteral">&quot;/erd/connect/isa-relationship/{model}&quot;</span>, TEST_MODEL_NAME, TEST_ISACONNECTION_PARENT ).getStatus() )</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                  .isEqualTo( HttpStatus.OK.value() );</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        Assertions.assertThat( preparePostRequest( <span class="stringliteral">&quot;/erd/connect/isa-relationship/{model}&quot;</span>, TEST_MODEL_NAME, TEST_ISACONNECTION_CHILD ).getStatus() ).isEqualTo(</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            HttpStatus.OK.value() );</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    @Test</div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a78d0bf291dd908476c6735471f933ee5">  135</a></span>&#160;    <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a78d0bf291dd908476c6735471f933ee5">createModelFromJSON</a>() throws Exception</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        Assertions.assertThat( preparePostRequest( <span class="stringliteral">&quot;/erd/read&quot;</span>, <span class="stringliteral">&quot;&quot;</span>, TEST_COMPLETE_JSON_MODEL ).getStatus() ).isEqualTo( HttpStatus.OK.value() );</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    @Test</div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a3efccfd4c097e6e7638e4fd7aeeef9a0">  146</a></span>&#160;    <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a3efccfd4c097e6e7638e4fd7aeeef9a0">normalizationTest</a>() throws Exception</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        Assertions.assertThat( preparePostRequest( <span class="stringliteral">&quot;/erd/read&quot;</span>, <span class="stringliteral">&quot;&quot;</span>, TEST_COMPLETE_JSON_MODEL ).getStatus() ).isEqualTo( HttpStatus.OK.value() );</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        Assertions.assertThat( preparePostRequest( <span class="stringliteral">&quot;/erd/normalization/{model}&quot;</span>, <span class="stringliteral">&quot;testmodel&quot;</span>, <span class="stringliteral">&quot;&quot;</span> ).getStatus() ).isEqualTo( HttpStatus.OK.value() );</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    }</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="comment">// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="comment">//</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="comment">// USEFUL METHODS</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="comment">//</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="comment">// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a22938dcabb8c9dbe7d52917994e7e3e3">  169</a></span>&#160;    <span class="keyword">private</span> MockHttpServletResponse <a class="code" href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a22938dcabb8c9dbe7d52917994e7e3e3">preparePostRequest</a>( @NonNull <span class="keyword">final</span> String p_uri, @NonNull <span class="keyword">final</span> String p_modelname, @NonNull <span class="keyword">final</span> String p_postbody )</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">throws</span> Exception</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    {</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="keywordflow">return</span> m_mockmvc.perform( MockMvcRequestBuilders.post( p_uri, p_modelname ).contentType( MediaType.APPLICATION_JSON ).content( p_postbody ) )</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                        .andReturn().getResponse();</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    }</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div><div class="ttc" id="classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController_htm_a035c1acbf78cc15db76cb9226fb5c395"><div class="ttname"><a href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a035c1acbf78cc15db76cb9226fb5c395">de.tu_clausthal.in.mec.modeling.controller.TestCErdController.initialControllerTest</a></div><div class="ttdeci">void initialControllerTest()</div><div class="ttdoc">test if the controller exists </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d1b/TestCErdController_8java_source.htm#l00089">TestCErdController.java:89</a></div></div>
<div class="ttc" id="classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController_htm_a9a3b8fdb7c5df405391077bcee793058"><div class="ttname"><a href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a9a3b8fdb7c5df405391077bcee793058">de.tu_clausthal.in.mec.modeling.controller.TestCErdController.m_erdcontroller</a></div><div class="ttdeci">CErdController m_erdcontroller</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d1b/TestCErdController_8java_source.htm#l00075">TestCErdController.java:75</a></div></div>
<div class="ttc" id="classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController_htm_a1cd9bd2e2d2cdfb353f3d888fec969a7"><div class="ttname"><a href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a1cd9bd2e2d2cdfb353f3d888fec969a7">de.tu_clausthal.in.mec.modeling.controller.TestCErdController.m_mockmvc</a></div><div class="ttdeci">MockMvc m_mockmvc</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d1b/TestCErdController_8java_source.htm#l00072">TestCErdController.java:72</a></div></div>
<div class="ttc" id="classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController_htm_ad3c4364aac29a2d188d96e7e4f7a2646"><div class="ttname"><a href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#ad3c4364aac29a2d188d96e7e4f7a2646">de.tu_clausthal.in.mec.modeling.controller.TestCErdController.createNewModelStepByStep</a></div><div class="ttdeci">void createNewModelStepByStep()</div><div class="ttdoc">create new complete model step by step </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d1b/TestCErdController_8java_source.htm#l00100">TestCErdController.java:100</a></div></div>
<div class="ttc" id="classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController_htm_a22938dcabb8c9dbe7d52917994e7e3e3"><div class="ttname"><a href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a22938dcabb8c9dbe7d52917994e7e3e3">de.tu_clausthal.in.mec.modeling.controller.TestCErdController.preparePostRequest</a></div><div class="ttdeci">MockHttpServletResponse preparePostRequest( @NonNull final String p_uri, @NonNull final String p_modelname, @NonNull final String p_postbody)</div><div class="ttdoc">prepare request for processing </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d1b/TestCErdController_8java_source.htm#l00169">TestCErdController.java:169</a></div></div>
<div class="ttc" id="classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController_htm"><div class="ttname"><a href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm">de.tu_clausthal.in.mec.modeling.controller.TestCErdController</a></div><div class="ttdoc">test class to test the rest controller </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d1b/TestCErdController_8java_source.htm#l00050">TestCErdController.java:50</a></div></div>
<div class="ttc" id="classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController_htm_a3efccfd4c097e6e7638e4fd7aeeef9a0"><div class="ttname"><a href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a3efccfd4c097e6e7638e4fd7aeeef9a0">de.tu_clausthal.in.mec.modeling.controller.TestCErdController.normalizationTest</a></div><div class="ttdeci">void normalizationTest()</div><div class="ttdoc">create new erd and check normalization </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d1b/TestCErdController_8java_source.htm#l00146">TestCErdController.java:146</a></div></div>
<div class="ttc" id="classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1CErdController_htm"><div class="ttname"><a href="../../dd/d3a/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1CErdController.htm">de.tu_clausthal.in.mec.modeling.controller.CErdController</a></div><div class="ttdoc">erd model rest controller </div><div class="ttdef"><b>Definition:</b> <a href="../../db/dd7/CErdController_8java_source.htm#l00063">CErdController.java:63</a></div></div>
<div class="ttc" id="classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController_htm_a78d0bf291dd908476c6735471f933ee5"><div class="ttname"><a href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a78d0bf291dd908476c6735471f933ee5">de.tu_clausthal.in.mec.modeling.controller.TestCErdController.createModelFromJSON</a></div><div class="ttdeci">void createModelFromJSON()</div><div class="ttdoc">create new erd </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d1b/TestCErdController_8java_source.htm#l00135">TestCErdController.java:135</a></div></div>
<div class="ttc" id="classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController_htm_a1adc7c9e57f04c4f799a1c27c63d4713"><div class="ttname"><a href="../../d8/df7/classde_1_1tu__clausthal_1_1in_1_1mec_1_1modeling_1_1controller_1_1TestCErdController.htm#a1adc7c9e57f04c4f799a1c27c63d4713">de.tu_clausthal.in.mec.modeling.controller.TestCErdController.setup</a></div><div class="ttdeci">void setup()</div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d1b/TestCErdController_8java_source.htm#l00078">TestCErdController.java:78</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_68267d1309a1af8e8297ef4c3efbcdba.htm">src</a></li><li class="navelem"><a class="el" href="../../dir_120ed4da3e3217b1e7fc0b4f48568e79.htm">test</a></li><li class="navelem"><a class="el" href="../../dir_97debbc39e3b917fca663601bb2b0709.htm">java</a></li><li class="navelem"><a class="el" href="../../dir_6906bac954a65d8e28fce4cd82e97810.htm">de</a></li><li class="navelem"><a class="el" href="../../dir_9ddafe82e063018e692e40183b9221c8.htm">tu_clausthal</a></li><li class="navelem"><a class="el" href="../../dir_a490ce2c01187569be00b2ecd77168b9.htm">in</a></li><li class="navelem"><a class="el" href="../../dir_7a4d9f1a892cbbe81d5197cac710b967.htm">mec</a></li><li class="navelem"><a class="el" href="../../dir_af081c5207cb2bccec6c1808c7c83e7f.htm">modeling</a></li><li class="navelem"><a class="el" href="../../dir_2e7915ee8f01beb996786decce1ec3c8.htm">controller</a></li><li class="navelem"><a class="el" href="../../d9/d1b/TestCErdController_8java.htm">TestCErdController.java</a></li>
    <li class="footer">Erzeugt von
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
